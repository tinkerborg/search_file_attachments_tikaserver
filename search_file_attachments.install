<?php

/**
 * @file
 * Module install
 */

/**
 * Implements hook_requirements().
 */
function search_file_attachments_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    // Check if java is available and executable.
    $temp = tempnam(file_directory_temp(), 'asa');
    exec('java -version > ' . $temp . ' 2>&1');
    $stderror = file_get_contents($temp);
    $found = preg_match('/Runtime Environment/', $stderror);

    if (!$found) {
      $requirements['search_file_attachments_java'] = array(
        'title' => $t('Java executable not found'),
        'description' => $t('Could not execute a java command.'),
        'severity' => REQUIREMENT_INFO,
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function search_file_attachments_install() {
  // Change the search_cron_limit variable to 10, so that cron doesn't
  // keep timing out.
  if (variable_get('search_cron_limit', 100) > 10) {
    variable_set('search_cron_limit', 10);
    drupal_set_message(st('Your search cron limit, which limits the number of
      items searched per cron run, has been set to 10. If it had been left
      at the default 100 your cron job could potentially continously timeout.
      If you want to cha ge this back you can do so <a href="!link">here</a>',
      array('!link' => url('admin/config/search/settings'))));
  }
}

/**
 * Implements hook_uninstall().
 */
function search_file_attachments_uninstall() {
  variable_del('search_file_attachments_tika_path');
  variable_del('search_file_attachments_tika_jar');
  variable_del('search_file_attachments_exclude_formats');
  variable_del('search_file_attachments_cron_last_change');
  variable_del('search_file_attachments_cron_last_id');
  drupal_uninstall_schema('search_file_attachments_index');
}

/**
 * Implements hook_schema().
 */
function search_file_attachments_schema() {
  $schema['search_file_attachments_index'] = array(
    'description' => t('Stores the extracted content from files'),
    'fields' => array(
      'fid' => array(
        'description' => 'The {file_managed}.fid being referenced to a file.',
        'type' => 'int',
        'not null' => FALSE,
        'unsinged' => TRUE,
      ),
      'content' => array(
        'description' => 'The extracted content fromt the file.',
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'fid' => array('fid'),
    ),
    'foreign keys' => array(
      'fid' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    ),
  );
  return $schema;
}
